rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Functions - الدوال المساعدة
    
    // التحقق من المصادقة
    function isAuthenticated() {
      return request.auth != null && request.auth.token.email_verified;
    }
    
    // التحقق من طبيب نشط
    function isActiveDoctor() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/doctors/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/doctors/$(request.auth.uid)).data.status == 'active';
    }
    
    // التحقق من مريض نشط
    function isActivePatient() {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/patients/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/patients/$(request.auth.uid)).data.status == 'active';
    }
    
    // التحقق من صلاحيات الطبيب للوصول
    function hasPatientAccess(patientId) {
      return isActiveDoctor() && 
        exists(/databases/$(database)/documents/patients/$(patientId)/permissions/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/patients/$(patientId)/permissions/$(request.auth.uid)).data.status == 'active';
    }

    // التحقق من صحة البيانات
    function isValidPatientData(data) {
      return data.size() <= 50 && // الحد الأقصى للحقول
        data.fullName is string &&
        data.age is number &&
        data.gender in ['male', 'female'] &&
        (!('email' in data) || data.email.matches('^[^@]+@[^@]+\\.[^@]+$'));
    }

    function isValidDoctorData(data) {
      return data.size() <= 50 &&
        data.fullName is string &&
        data.specialization is string &&
        data.licenseNumber is string &&
        data.licenseNumber.matches('^[A-Z0-9-]+$');
    }

    function isValidMedicalRecord(data) {
      return data.size() <= 100 &&
        data.diagnosis is string &&
        data.date is timestamp &&
        data.doctorId is string;
    }

    // تحديد المالك
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // قواعد المجموعات

    // مجموعة المرضى
    match /patients/{patientId} {
      allow read: if isOwner(patientId) || hasPatientAccess(patientId);
      allow create: if isAuthenticated() && isValidPatientData(request.resource.data);
      allow update: if isOwner(patientId) && isValidPatientData(request.resource.data);
      allow delete: if false; // منع حذف السجلات

      // السجلات الطبية
      match /medicalRecords/{recordId} {
        allow read: if isOwner(patientId) || hasPatientAccess(patientId);
        allow create: if hasPatientAccess(patientId) && isValidMedicalRecord(request.resource.data);
        allow update: if hasPatientAccess(patientId) && isValidMedicalRecord(request.resource.data);
        allow delete: if false; // منع حذف السجلات
      }

      // صلاحيات الوصول
      match /permissions/{doctorId} {
        allow read: if isOwner(patientId) || isOwner(doctorId);
        allow write: if isOwner(patientId);
      }

      // طلبات الوصول
      match /accessRequests/{doctorId} {
        allow read: if isOwner(patientId) || isOwner(doctorId);
        allow create: if isActiveDoctor() && isOwner(doctorId);
        allow delete: if isOwner(patientId);
      }

      // الوصفات الطبية
      match /prescriptions/{prescriptionId} {
        allow read: if isOwner(patientId) || hasPatientAccess(patientId);
        allow create, update: if hasPatientAccess(patientId) && request.resource.data.doctorId == request.auth.uid;
        allow delete: if false;
      }
    }

    // مجموعة الأطباء
    match /doctors/{doctorId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && isValidDoctorData(request.resource.data);
      allow update: if isOwner(doctorId) && isValidDoctorData(request.resource.data);
      allow delete: if false;

      // جدول المواعيد
      match /schedule/{appointmentId} {
        allow read: if isAuthenticated();
        allow write: if isOwner(doctorId);
      }

      // التقييمات
      match /reviews/{reviewId} {
        allow read: if true;
        allow create: if isActivePatient() && 
          exists(/databases/$(database)/documents/patients/$(request.auth.uid)/medicalRecords);
        allow update, delete: if false;
      }
    }

    // مجموعة الإشعارات
    match /notifications/{notificationId} {
      allow read: if isAuthenticated() && 
        (resource.data.userId == request.auth.uid || 
         resource.data.doctorId == request.auth.uid);
      allow write: if false; // كتابة من خلال Cloud Functions فقط
    }

    // مجموعة التقارير
    match /reports/{reportId} {
      allow read: if isActiveDoctor() && hasPatientAccess(resource.data.patientId);
      allow create: if isActiveDoctor() && hasPatientAccess(request.resource.data.patientId);
      allow update, delete: if false;
    }

    // قواعد عامة للقراءة فقط
    match /publicData/{document=**} {
      allow read: if true;
      allow write: if false;
    }
  }
}